// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using InformaticaTrentinaPCL.Home.ActionDialog;
using InformaticaTrentinaPCL.iOS.Helper;
using InformaticaTrentinaPCL.iOS.Login.Session;
using UIKit;

namespace InformaticaTrentinaPCL.iOS.TabBar.Document.Action.Storyboard
{
    public partial class UIViewControllerActionDocument : UIViewController, IUITableViewDelegate, IUITableViewDataSource
    {

        public List<DialogItem> itemList;
        private UITapGestureRecognizer tapGesture;

		public UIViewControllerActionDocument(IntPtr handle) : base(handle)
        {
        }

        private void ConfigureGesture()
        {
             tapGesture = new UITapGestureRecognizer(() => {
                // close Button
                viewRoot.Alpha = 0;
                DismissViewController(true, null);

            });
            viewRoot.AddGestureRecognizer(tapGesture);
        }

        public void ConfigureTable()
        {
            tableView.Delegate = this;
            tableView.DataSource = this;
            tableView.EstimatedRowHeight = 100;
            tableView.EstimatedSectionHeaderHeight = 100;
            tableView.RowHeight = UITableView.AutomaticDimension;
            tableView.SectionHeaderHeight = UITableView.AutomaticDimension;
        }

        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);
            Animation.Start(Animation.SHORT_ANIMATION, () => { viewRoot.Alpha = 0.45f; }, () => { });
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            ConfigureTable();
            heightTable.Constant = itemList != null ? (itemList.Count * 50) + 65 : 50;
            ConfigureGesture();
        }

        [Export("tableView:didSelectRowAtIndexPath:")]
        public virtual void RowSelected(UITableView tableView, NSIndexPath indexPath)
        {
            viewRoot.Alpha = 0;
            itemList[indexPath.Row].OnClickHandler();
        }

        [Export("tableView:viewForHeaderInSection:")]
        public virtual UIView GetViewForHeader(UITableView tableView, nint section)
        {
            UITVCellHeaderActionDocument cell = (UITVCellHeaderActionDocument)tableView.DequeueReusableCell("UITVCellHeaderActionDocument");

            if (cell == null)
                cell = new UITVCellHeaderActionDocument();
            
            cell.Update(Utility.LanguageConvert("document_title"), args =>
            {
                // close Button
                viewRoot.Alpha = 0;
                DismissViewController(true, null);
            });

            return cell;
        }

        public UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {
            UITVCellRowActionDocument cell = (UITVCellRowActionDocument)tableView.DequeueReusableCell("UITVCellRowActionDocument");

            if (cell == null)
                cell = new UITVCellRowActionDocument();
            
            cell.Update(itemList[indexPath.Row].Title);

            return cell;

        }

        [Export("numberOfSectionsInTableView:")]
        public virtual nint NumberOfSections(UITableView tableView)
        {
            return itemList != null ? 1 : 0;
        }

        public nint RowsInSection(UITableView tableView, nint section)
        {
            return itemList!=null?itemList.Count:0;
        }

    }
}
