// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using InformaticaTrentinaPCL.iOS.Helper;
using UIKit;

namespace InformaticaTrentinaPCL.iOS.PasswordExpired
{
	public partial class UITVCellPassword : UITableViewCell,IUITextFieldDelegate
	{
        private ClassCellPasswordExpired calsscel;

        public UITVCellPassword (IntPtr handle) : base (handle)
		{
		}

        public void Update(ClassCellPasswordExpired calsscel)
        {
            this.calsscel = calsscel;
            text.Delegate = this;
            text.Placeholder = calsscel.title;
            footerView.BackgroundColor = Colors.FOOTER_SEPARATOR;
            Font.SetCustomStyleFont(text, Font.INPUT);
        }

        [Export("textField:shouldChangeCharactersInRange:replacementString:")]
        public bool ShouldChangeCharacters(UITextField textField, NSRange range, string replacementString)
        {
            NSString newString = (Foundation.NSString)textField.Text;
            newString = newString.Replace(range, (Foundation.NSString)replacementString);
            textField.Text = newString;

            if (calsscel.typeCell == TypeCellPassword.CONFIRM)
                calsscel.presenterPassword.UpdateRepeatedNewPassword(textField.Text);
            else if (calsscel.typeCell == TypeCellPassword.NEW)
                calsscel.presenterPassword.UpdateNewPassword(textField.Text);
            else if (calsscel.typeCell == TypeCellPassword.OLD)
                calsscel.presenterPassword.UpdateOldPassword(textField.Text);
            else if (calsscel.typeCell == TypeCellPassword.ADMIN)
            {
                
            }

            return false;
        }

		[Export("textFieldShouldReturn:")]
		public virtual bool ShouldReturn(UITextField textField)
		{
            textField.EndEditing(true);
			return true;
		}
	}
}
