// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using InformaticaTrentinaPCL.iOS.Delega.Storyboard;
using InformaticaTrentinaPCL.iOS.Helper;
using UIKit;
using UICode.iOS;
using InformaticaTrentinaPCL.iOS.Delega;

namespace InformaticaTrentinaPCL.iOS.Filter
{
    public partial class UITVCellSelectedData : UITableViewCell,IUITextFieldDelegate
	{
        private bool IsInit = true;
		private UIViewControllerPickerData pikerData;
        private StructureControllerFilter filterstruct;
		private UIVControllerFilter controller;

		public UITVCellSelectedData (IntPtr handle) : base (handle)
		{
		}

        public void Update(StructureControllerFilter filterstruct,UIVControllerFilter controller)
        {
            if (IsInit)
            {
                IsInit = false;
                desc_Ricerca.Text = filterstruct.descTitle; // " test stringa ";
                if (String.IsNullOrEmpty(desc_Ricerca.Text))
                    desc_Ricerca.Enabled = false;

                textDay.Delegate = this;
                textyear.Delegate = this;
                textMonth.Delegate = this;
                this.controller = controller;
                text.Text = filterstruct.desc;
                Font.SetCustomStyleFont(text, Font.LABEL_DATA);
                viewFooter1.BackgroundColor = Colors.FOOTER_SEPARATOR;
                viewFooter2.BackgroundColor = Colors.FOOTER_SEPARATOR;
                viewFooter3.BackgroundColor = Colors.FOOTER_SEPARATOR;
			}

            this.filterstruct = filterstruct;
            textDay.Placeholder = filterstruct.date == null ? Utility.LanguageConvert("gg") : "";
            textyear.Placeholder = filterstruct.date == null ? Utility.LanguageConvert("aaaa") : "";
            textMonth.Placeholder = filterstruct.date == null ? Utility.LanguageConvert("mm") : "";

            if (filterstruct != null && filterstruct.date != null)
            {
                var split = Utility.splitDateForGGMMAAAA(filterstruct.date);
				textDay.Text = split.Day.ToString();
                textyear.Text = split.Year.ToString();
                textMonth.Text = split.Month.ToString();
            }

            Font.SetCustomStyleFont(textDay, Font.DETAILS,UITextAlignment.Center);
			Font.SetCustomStyleFont(textyear, Font.DETAILS, UITextAlignment.Center);
			Font.SetCustomStyleFont(textMonth, Font.DETAILS, UITextAlignment.Center);
		}

        [Export("textFieldDidBeginEditing:")]
        public void EditingStarted(UITextField textField)
        {
            Console.WriteLine("EditingStarted");
        }

		[Export("textFieldShouldBeginEditing:")]
		public virtual bool ShouldBeginEditing(UITextField textField)
        {
            pikerData = (UIViewControllerPickerData) Utility.GetControllerFromStoryboard("Storyboard_Delegation","UIViewControllerPickerData");
            pikerData.Callback = Callback;
            pikerData.ModalPresentationStyle = UIModalPresentationStyle.OverCurrentContext;
            this.controller.PresentViewController(pikerData,true,null);

            return false;
        }

        private void Callback()
        {
            if (pikerData.date != null)
            {
                var split = Utility.splitDateForGGMMAAAA(pikerData.date);
                filterstruct.date = pikerData.date;

                if (this.filterstruct.typeBody == Role.Storyboard.CellTypeBody.DateDA)
                {
                    this.filterstruct.presenter.UpdateStartDate(filterstruct.date.NSDateToDateTime());
                }
                else if (this.filterstruct.typeBody == Role.Storyboard.CellTypeBody.DateA)
                {
                    this.filterstruct.presenter.UpdateEndDate(filterstruct.date.NSDateToDateTime());
                }
                else if (this.filterstruct.typeBody == Role.Storyboard.CellTypeBody.DateDaProtocol)
                {
                    this.filterstruct.presenter.UpdateStartDateProtocol(filterstruct.date.NSDateToDateTime());
                }
                else if (this.filterstruct.typeBody == Role.Storyboard.CellTypeBody.DateAProtocol)
                {
                    this.filterstruct.presenter.UpdateEndDateProtocol(filterstruct.date.NSDateToDateTime());
                }
            }

            controller.RadioButtonRefresh(filterstruct);
        }
    }
}
