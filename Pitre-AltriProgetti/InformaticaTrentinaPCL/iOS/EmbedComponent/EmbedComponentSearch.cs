// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using InformaticaTrentinaPCL.iOS.Helper;
using UIKit;

namespace InformaticaTrentinaPCL.iOS.EmbedComponent
{
    public interface ListenerEmbedSearch 
    {
        void ActionButtonClick();
        void EditingTextField(UITextField textField);
        void KeyboardReturnDone(UITextField textField);

    }

    public partial class EmbedComponentSearch : UIViewController, IUITextFieldDelegate
    {
        public EmbedComponentSearch(IntPtr handle) : base(handle)
        {
        }

        private string placeholder = Utility.LanguageConvert("search");
        private string labelButtonCancel = Utility.LanguageConvert("cancel");
        private ListenerEmbedSearch delegate_;
        private string descriptionSearch = "";

        private void ConfigureSearch()
        {
            viewFooter.BackgroundColor = Colors.COLOR_SEARCH_FOOTER;
            textfield.Placeholder = this.placeholder;
            labelDescriptionSearch.Text = this.descriptionSearch;
            textfield.Delegate = this;
            buttonCancel.SetTitle(this.labelButtonCancel, UIControlState.Normal);
            Font.SetCustomStyleFont(buttonCancel, Font.INPUT);
            Font.SetCustomStyleFont(textfield, Font.INPUT, UITextAlignment.Left);
        }

        private void ConfigureCancel()
        {
            UIColor color = textfield.Text.Length == 0 ? (Colors.COLOR_SEARCH) : (Colors.COLOR_BLUE_TEXT_ROW_COLOR);
            buttonCancel.SetTitleColor(color, UIControlState.Normal);
            buttonCancel.Enabled = textfield.Text.Length != 0;
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            ConfigureSearch();
            ConfigureCancel();
        }

        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);
        }

        public void ConfigureEmbedComponedSearch(string placeholder, string labelButtonCancel, string description, ListenerEmbedSearch delegate_)
        {
            this.placeholder = placeholder;
            this.labelButtonCancel = labelButtonCancel;
            this.delegate_ = delegate_;
            this.descriptionSearch = description;
        }

        [Export("textField:shouldChangeCharactersInRange:replacementString:")]
        public virtual bool ShouldChangeCharacters(UITextField textField, NSRange range, string replacementString)
        {
            NSString newString = ((NSString)textField.Text).Replace(range, (NSString)replacementString);
            textField.Text = newString;
            delegate_.EditingTextField(this.textfield);
            ConfigureCancel();
            return false;
        }

        [Export("textFieldShouldReturn:")]
        public virtual bool ShouldReturn(UITextField textField)
        {
            textField.EndEditing(true);
            ConfigureCancel();
            delegate_.KeyboardReturnDone(this.textfield);
            return true;
        }

        partial void ActionButtonCalcel(NSObject sender)
        {
            textfield.Text = "";
            ConfigureCancel();
            delegate_.ActionButtonClick();
            this.View.EndEditing(true);
        }
    }
}
