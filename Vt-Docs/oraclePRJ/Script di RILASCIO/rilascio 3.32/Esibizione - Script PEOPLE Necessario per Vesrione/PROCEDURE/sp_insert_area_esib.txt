CREATE OR REPLACE PROCEDURE sp_insert_area_esib (
   p_idamm                   NUMBER,
   p_idesibizione             NUMBER,
   p_idpeople                NUMBER,
   p_idprofile               NUMBER,
   p_idproject               NUMBER,
   p_codfasc                 VARCHAR,
   p_oggetto                 VARCHAR,
   p_tipodoc                 CHAR,
   p_idgruppo                NUMBER,
   p_idregistro              NUMBER,
   p_docnumber               NUMBER,
   p_userid                  VARCHAR,
   p_tipooggetto             CHAR,
   p_tipoatto                VARCHAR,
   p_idconservazione         NUMBER,
   p_result            OUT   NUMBER
)
IS
   idruoloinuo              NUMBER := 0;
   id_area_esibizione       NUMBER := 0;
   id_items_esibizione      NUMBER := 0;
   res                      NUMBER := 0;
BEGIN
   BEGIN
    --Recupero sequence di DPA_AREA_ESIBIZIONE
      SELECT seq_dpa_area_esibizione.NEXTVAL
        INTO id_area_esibizione
        FROM DUAL;
        
    --Recupero sequence di DPA_ITEMS_ESIBIZIONE
      SELECT seq_dpa_items_esibizione.NEXTVAL
        INTO id_items_esibizione
        FROM DUAL;
    
    --Recupero idRuoloInUo dalla DPA_CORR_GLOBALI
      SELECT dpa_corr_globali.system_id
        INTO idruoloinuo
        FROM dpa_corr_globali
       WHERE dpa_corr_globali.id_gruppo = p_idgruppo;

      IF (p_idesibizione IS NULL)
      THEN
         BEGIN
            -- Reperimento di una istanza di esibizione corrente in stato Nuovo per la coppia id_people e id_ruolo_in_uo
            SELECT sys INTO res 
            FROM (
                    SELECT dpa_area_esibizione.system_id as sys
                    FROM dpa_area_esibizione
                    WHERE dpa_area_esibizione.id_people = p_idpeople
                    AND dpa_area_esibizione.id_ruolo_in_uo = idruoloinuo
                    AND dpa_area_esibizione.cha_stato = 'N' 
                    order by dpa_area_esibizione.system_id desc
                ) 
            WHERE rownum=1;
            
         EXCEPTION
            WHEN OTHERS
            THEN
               res := 0;
         END;
      ELSE
         BEGIN
            res := p_idesibizione;
         END;
      END IF;

      IF (res > 0)
      THEN
         INSERT INTO dpa_items_esibizione
                     (system_id, id_esibizione, id_profile, id_project,
                      cha_tipo_doc, var_oggetto, id_registro, data_ins,
                      cha_stato, var_xml_metadati, cod_fasc, docnumber,
                      cha_tipo_oggetto, var_tipo_atto, id_conservazione 
                     )
              VALUES (id_items_esibizione, res, p_idprofile, p_idproject,
                      p_tipodoc, p_oggetto, p_idregistro, SYSDATE,
                      'N', EMPTY_CLOB (), p_codfasc, p_docnumber,
                      p_tipooggetto, p_tipoatto, p_idconservazione
                     );

         p_result := id_items_esibizione;
      ELSE
         INSERT INTO dpa_area_esibizione
                     (system_id, id_amm, id_people, id_ruolo_in_uo,
                      cha_stato, data_creazione
                     )
              VALUES (id_area_esibizione, p_idamm, p_idpeople, idruoloinuo,
                      'N', SYSDATE
                     );

         INSERT INTO dpa_items_esibizione
                     (system_id, id_esibizione, id_profile, id_project,
                      cha_tipo_doc, var_oggetto, id_registro, data_ins,
                      cha_stato, var_xml_metadati, cod_fasc, docnumber,
                      cha_tipo_oggetto, var_tipo_atto, id_conservazione
                     )
              VALUES (id_items_esibizione, id_area_esibizione, p_idprofile, p_idproject,
                      p_tipodoc, p_oggetto, p_idregistro, SYSDATE,
                      'N', EMPTY_CLOB (), p_codfasc, p_docnumber,
                      p_tipooggetto, p_tipoatto, p_idconservazione
                     );

         p_result := id_items_esibizione;
      END IF;
   EXCEPTION
      WHEN OTHERS
      THEN
         p_result := -1;
   END;
END;
/
