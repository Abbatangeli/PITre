//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:2.0.50727.3603
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 

namespace InlineConverterEngine.Proxy
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ConvertEngineWSSoap", Namespace = "http://www.valueteam.com/VTDocs/ConverterEngine")]
    public partial class ConvertEngineWS : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback ResetEngineOperationCompleted;

        private System.Threading.SendOrPostCallback ConvertOperationCompleted;

        /// <remarks/>
        public ConvertEngineWS()
        {
            // L'url del servizio viene impostato ad un indirizzo fake.
            this.Url = "http://localhost/fake.asmx";
        }

        /// <remarks/>
        public event ResetEngineCompletedEventHandler ResetEngineCompleted;

        /// <remarks/>
        public event ConvertCompletedEventHandler ConvertCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.valueteam.com/VTDocs/ConverterEngine/ResetEngine", RequestNamespace = "http://www.valueteam.com/VTDocs/ConverterEngine", ResponseNamespace = "http://www.valueteam.com/VTDocs/ConverterEngine", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetEngine()
        {
            this.Invoke("ResetEngine", new object[0]);
        }

        /// <remarks/>
        public System.IAsyncResult BeginResetEngine(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ResetEngine", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public void EndResetEngine(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ResetEngineAsync()
        {
            this.ResetEngineAsync(null);
        }

        /// <remarks/>
        public void ResetEngineAsync(object userState)
        {
            if ((this.ResetEngineOperationCompleted == null))
            {
                this.ResetEngineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetEngineOperationCompleted);
            }
            this.InvokeAsync("ResetEngine", new object[0], this.ResetEngineOperationCompleted, userState);
        }

        private void OnResetEngineOperationCompleted(object arg)
        {
            if ((this.ResetEngineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetEngineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.valueteam.com/VTDocs/ConverterEngine/Convert", RequestNamespace = "http://www.valueteam.com/VTDocs/ConverterEngine", ResponseNamespace = "http://www.valueteam.com/VTDocs/ConverterEngine", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Convert(string filePath, string outFilePath, bool recognizeText)
        {
            object[] results = this.Invoke("Convert", new object[] {
                    filePath,
                    outFilePath,
                    recognizeText});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginConvert(string filePath, string outFilePath, bool recognizeText, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Convert", new object[] {
                    filePath,
                    outFilePath,
                    recognizeText}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndConvert(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ConvertAsync(string filePath, string outFilePath, bool recognizeText)
        {
            this.ConvertAsync(filePath, outFilePath, recognizeText, null);
        }

        /// <remarks/>
        public void ConvertAsync(string filePath, string outFilePath, bool recognizeText, object userState)
        {
            if ((this.ConvertOperationCompleted == null))
            {
                this.ConvertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertOperationCompleted);
            }
            this.InvokeAsync("Convert", new object[] {
                    filePath,
                    outFilePath,
                    recognizeText}, this.ConvertOperationCompleted, userState);
        }

        private void OnConvertOperationCompleted(object arg)
        {
            if ((this.ConvertCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertCompleted(this, new ConvertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ResetEngineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ConvertCompletedEventHandler(object sender, ConvertCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ConvertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}