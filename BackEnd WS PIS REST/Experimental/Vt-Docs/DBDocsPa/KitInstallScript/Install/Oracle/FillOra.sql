BEGIN
  INSERT INTO DPA_LOCK (NUM_STATO, VAR_SEMAFORO)
  	SELECT
    0, 'PROTOCOLLO'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_LOCK WHERE VAR_SEMAFORO='PROTOCOLLO');

  INSERT INTO APPS (SYSTEM_ID,APPLICATION, DESCRIPTION, COUNT_KEYS, TIMEOUT, VER_TOLERANT,
  	FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP,
  	DOS_MONITORING, LANGUAGE, VIEWER, PRINTING, DISABLED, OUTPUT_EXTS, PDFCOMPAT, INTEGRATED,
  	FILE_TYPES, SUPER_APP, USE_UNCNAME, DIRMON_STUBCHECK, MIME_TYPE )
  	SELECT
    SEQ.NEXTVAL, 'HTML', 'Web Publishing Browser (html)', 'N', NULL, 'N', 2, 'Y', 'N', 'HTML', 'Y'
  , 'Y', NULL, 1, NULL, NULL, 'N', NULL, NULL, '1', NULL, 'N', 'N', NULL, 'text/html'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM APPS WHERE APPLICATION='HTML');

  INSERT INTO APPS (SYSTEM_ID,APPLICATION, DESCRIPTION, COUNT_KEYS, TIMEOUT, VER_TOLERANT,
  	FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP,
  	DOS_MONITORING, LANGUAGE, VIEWER, PRINTING, DISABLED, OUTPUT_EXTS, PDFCOMPAT, INTEGRATED,
  	FILE_TYPES, SUPER_APP, USE_UNCNAME, DIRMON_STUBCHECK, MIME_TYPE )
  	SELECT
    SEQ.NEXTVAL, 'PUB BROWSER', 'Web Publishing Browser (htm)', 'N', NULL, 'N', 2, 'Y', 'N', 'HTML', 'Y'
  	, 'Y', NULL, 1, NULL, NULL, 'N', NULL, NULL, '1', NULL, 'N', 'N', NULL, 'text/htm'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM APPS WHERE APPLICATION='PUB BROWSER');
	
	--documenttypes
  INSERT INTO DOCUMENTTYPES (SYSTEM_ID, TYPE_ID, DESCRIPTION, DISABLED, STORAGE_TYPE, RETENTION_DAYS,
	MAX_VERSIONS, MAX_SUBVERSIONS, FULL_TEXT, TARGET_DOCSRVR, RET_2, RET_2_TYPE, KEEP_CRITERIA,
	VERSIONS_TO_KEEP, CHA_TIPO_CANALE )
  	SELECT
    SEQ.NEXTVAL, 'LETTERA', 'LETTERA', NULL, 'A', 0, 99, 26, 'N', 0, 0, 'A', 'L', 0, 'L'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DOCUMENTTYPES WHERE TYPE_ID='LETTERA');

  INSERT INTO DOCUMENTTYPES (SYSTEM_ID, TYPE_ID, DESCRIPTION, DISABLED, STORAGE_TYPE, RETENTION_DAYS,
	MAX_VERSIONS, MAX_SUBVERSIONS, FULL_TEXT, TARGET_DOCSRVR, RET_2, RET_2_TYPE, KEEP_CRITERIA,
	VERSIONS_TO_KEEP, CHA_TIPO_CANALE )
  	SELECT
    SEQ.NEXTVAL,   'MAIL', 'MAIL', NULL, 'A', 0, 99, 26, 'N', 0, 0, 'A', 'L', 0, 'M'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DOCUMENTTYPES WHERE TYPE_ID='MAIL');

	--dpa_ragione_trasm
  INSERT INTO DPA_RAGIONE_TRASM (SYSTEM_ID,  VAR_DESC_RAGIONE,
	CHA_TIPO_RAGIONE, CHA_VIS, CHA_TIPO_DIRITTI, CHA_TIPO_DEST, CHA_RISPOSTA, VAR_NOTE, CHA_EREDITA,
	ID_AMM, CHA_TIPO_RISPOSTA )
  	SELECT
    SEQ.NEXTVAL,  'PRIVACY', 'N', '1', 'W', 'T', '0', 'Tale ragione puo'' essere utilizzata per dare la visibilita'' su un documento ad un ruolo o persona non estendendo la visibilita'' ai superiori gerarchici del destinatario'
    , '0', NULL, NULL
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_RAGIONE_TRASM WHERE VAR_DESC_RAGIONE='PRIVACY');

  INSERT INTO DPA_RAGIONE_TRASM (SYSTEM_ID,  VAR_DESC_RAGIONE,
	CHA_TIPO_RAGIONE, CHA_VIS, CHA_TIPO_DIRITTI, CHA_TIPO_DEST, CHA_RISPOSTA, VAR_NOTE, CHA_EREDITA,
	ID_AMM, CHA_TIPO_RISPOSTA )
  	SELECT
    SEQ.NEXTVAL,   'APPROVAZIONE', 'W', '1', 'W', 'S', '0', 'Tale ragione puo'' essere utilizzata per sottoporre ai propri superiori gerarchici un documento per approvazione. E'' prevista una esplicita accettazione o rifiuto da parte del destinatario'
	, '1', NULL, NULL
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_RAGIONE_TRASM WHERE VAR_DESC_RAGIONE='APPROVAZIONE');
	
	
  INSERT INTO DPA_RAGIONE_TRASM (SYSTEM_ID,  VAR_DESC_RAGIONE,
	CHA_TIPO_RAGIONE, CHA_VIS, CHA_TIPO_DIRITTI, CHA_TIPO_DEST, CHA_RISPOSTA, VAR_NOTE, CHA_EREDITA,
	ID_AMM, CHA_TIPO_RISPOSTA )
  	SELECT
    SEQ.NEXTVAL, 'RISPOSTA', 'W', '0', 'W', 'S', '0', 'Ragione Risposta', '1', NULL
	, 'R'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_RAGIONE_TRASM WHERE VAR_DESC_RAGIONE='RISPOSTA');
	
	
  INSERT INTO DPA_RAGIONE_TRASM (SYSTEM_ID,  VAR_DESC_RAGIONE,
	CHA_TIPO_RAGIONE, CHA_VIS, CHA_TIPO_DIRITTI, CHA_TIPO_DEST, CHA_RISPOSTA, VAR_NOTE, CHA_EREDITA,
	ID_AMM, CHA_TIPO_RISPOSTA )
  	SELECT
    SEQ.NEXTVAL, 'ASSEGNAZIONE', 'W', '1', 'W', 'I', '1', 'Tale ragione puo'' essere utilizzata per assegnare ai propri inferiorii gerarchici un documento . E'' prevista una esplicita accettazione o rifiuto da parte del destinatario'
	, '1', NULL, NULL
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_RAGIONE_TRASM WHERE VAR_DESC_RAGIONE='ASSEGNAZIONE');
	
	
  INSERT INTO DPA_RAGIONE_TRASM (SYSTEM_ID,  VAR_DESC_RAGIONE,
	CHA_TIPO_RAGIONE, CHA_VIS, CHA_TIPO_DIRITTI, CHA_TIPO_DEST, CHA_RISPOSTA, VAR_NOTE, CHA_EREDITA,
	ID_AMM, CHA_TIPO_RISPOSTA )
  	SELECT
    SEQ.NEXTVAL, 'INOLTRO', 'N', '1', 'W', 'T', '0', 'Tale ragione puo'' essere utilizzata per dara la visibilita'' su un documento ad un utente o ruolo. I possibili destinatari sono tutti coloro che hanno visibilita'' sul registro'
	, '1', NULL, NULL
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_RAGIONE_TRASM WHERE VAR_DESC_RAGIONE='INOLTRO');
	
	
  INSERT INTO DPA_RAGIONE_TRASM (SYSTEM_ID,  VAR_DESC_RAGIONE,
	CHA_TIPO_RAGIONE, CHA_VIS, CHA_TIPO_DIRITTI, CHA_TIPO_DEST, CHA_RISPOSTA, VAR_NOTE, CHA_EREDITA,
	ID_AMM, CHA_TIPO_RISPOSTA )
  	SELECT
    SEQ.NEXTVAL, 'VISIONE', 'N', '0', 'R', 'T', '0', 'Ragione Visione', '1', NULL
	, NULL
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_RAGIONE_TRASM WHERE VAR_DESC_RAGIONE='VISIONE');
	
	
  INSERT INTO DPA_RAGIONE_TRASM (SYSTEM_ID,  VAR_DESC_RAGIONE,
	CHA_TIPO_RAGIONE, CHA_VIS, CHA_TIPO_DIRITTI, CHA_TIPO_DEST, CHA_RISPOSTA, VAR_NOTE, CHA_EREDITA,
	ID_AMM, CHA_TIPO_RISPOSTA )
  	SELECT
    SEQ.NEXTVAL, 'ALLA FIRMA', 'W', '0', 'W', 'S', '0', 'Tale ragione puo'' essere utilizzata per sottoporre ai propri superiori gerarchici un documento da firmare. E'' prevista una esplicita accettazione o rifiuto da parte del destinatario'
	, '1', NULL, NULL
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_RAGIONE_TRASM WHERE VAR_DESC_RAGIONE='ALLA FIRMA');
	
	
  INSERT INTO DPA_RAGIONE_TRASM (SYSTEM_ID,  VAR_DESC_RAGIONE,
	CHA_TIPO_RAGIONE, CHA_VIS, CHA_TIPO_DIRITTI, CHA_TIPO_DEST, CHA_RISPOSTA, VAR_NOTE, CHA_EREDITA,
	ID_AMM, CHA_TIPO_RISPOSTA )
  	SELECT
    SEQ.NEXTVAL, 'CONCLUSIONE', 'W', '0', 'W', 'S', '0', 'Notifica conclusione delle attivita'''
	, '1', NULL, 'C'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_RAGIONE_TRASM WHERE VAR_DESC_RAGIONE='CONCLUSIONE');
	
	
  INSERT INTO DPA_RAGIONE_TRASM (SYSTEM_ID,  VAR_DESC_RAGIONE,
	CHA_TIPO_RAGIONE, CHA_VIS, CHA_TIPO_DIRITTI, CHA_TIPO_DEST, CHA_RISPOSTA, VAR_NOTE, CHA_EREDITA,
	ID_AMM, CHA_TIPO_RISPOSTA )
  	SELECT
    SEQ.NEXTVAL, 'INTEROPERABILITA', 'I', '0', 'W', 'T', '0', 'Ragione di trasmissione per interoperabilita''', '1',NULL , NULL
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_RAGIONE_TRASM WHERE VAR_DESC_RAGIONE='INTEROPERABILITA');
	
	
  INSERT INTO DPA_RAGIONE_TRASM (SYSTEM_ID,  VAR_DESC_RAGIONE,
	CHA_TIPO_RAGIONE, CHA_VIS, CHA_TIPO_DIRITTI, CHA_TIPO_DEST, CHA_RISPOSTA, VAR_NOTE, CHA_EREDITA,
	ID_AMM, CHA_TIPO_RISPOSTA )
  	SELECT
    SEQ.NEXTVAL, 'PARILIVELLO', 'N', '1', 'W', 'P', '0', 'Trasmissione a pari livello','0',NULL ,NULL
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_RAGIONE_TRASM WHERE VAR_DESC_RAGIONE='PARILIVELLO');


  INSERT INTO DPA_RAGIONE_TRASM (SYSTEM_ID,  VAR_DESC_RAGIONE,
	CHA_TIPO_RAGIONE, CHA_VIS, CHA_TIPO_DIRITTI, CHA_TIPO_DEST, CHA_RISPOSTA, VAR_NOTE, CHA_EREDITA,
	ID_AMM, CHA_TIPO_RISPOSTA )
  	SELECT
    SEQ.NEXTVAL, 'RIFIUTO', 'N', '0', 'W', 'T', '0', 'Rifiuta una trasmissione ricevuta','0',NULL ,NULL
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_RAGIONE_TRASM WHERE VAR_DESC_RAGIONE='RIFIUTO');

	
	-- dpa_tipo_funzione
  INSERT INTO DPA_TIPO_FUNZIONE (SYSTEM_ID, VAR_COD_TIPO,VAR_DESC_TIPO_FUN, CHA_VIS)
  	SELECT
    SEQ.NEXTVAL, 'LETT', 'LETTURA', '1'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_TIPO_FUNZIONE WHERE VAR_COD_TIPO='LETT');

  INSERT INTO DPA_TIPO_FUNZIONE (SYSTEM_ID, VAR_COD_TIPO,VAR_DESC_TIPO_FUN, CHA_VIS)
  	SELECT
    SEQ.NEXTVAL, 'IBRI', 'IBRIDO PER FIRMA E ALLEGATI', '1'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_TIPO_FUNZIONE WHERE VAR_COD_TIPO='IBRI');
	
	
  INSERT INTO DPA_TIPO_FUNZIONE (SYSTEM_ID, VAR_COD_TIPO,VAR_DESC_TIPO_FUN, CHA_VIS)
  	SELECT
    SEQ.NEXTVAL, 'WORK', 'LAVORO', '1'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_TIPO_FUNZIONE WHERE VAR_COD_TIPO='WORK');
	
	
  INSERT INTO DPA_TIPO_FUNZIONE (SYSTEM_ID, VAR_COD_TIPO,VAR_DESC_TIPO_FUN, CHA_VIS)
  	SELECT
    SEQ.NEXTVAL, 'FASC', 'GESTIONE FASCICOLI', '1'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_TIPO_FUNZIONE WHERE VAR_COD_TIPO='FASC');
	
	
  INSERT INTO DPA_TIPO_FUNZIONE (SYSTEM_ID, VAR_COD_TIPO,VAR_DESC_TIPO_FUN, CHA_VIS)
  	SELECT
    SEQ.NEXTVAL, 'FIRMA', 'FIRMA', '1'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_TIPO_FUNZIONE WHERE VAR_COD_TIPO='FIRMA');

  INSERT INTO DPA_TIPO_FUNZIONE (SYSTEM_ID, VAR_COD_TIPO,VAR_DESC_TIPO_FUN, CHA_VIS)
  	SELECT
    SEQ.NEXTVAL, 'REG', 'STATO REGISTRI', '1'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_TIPO_FUNZIONE WHERE VAR_COD_TIPO='REG');
	
	
  INSERT INTO DPA_TIPO_FUNZIONE (SYSTEM_ID, VAR_COD_TIPO,VAR_DESC_TIPO_FUN, CHA_VIS)
  	SELECT
    SEQ.NEXTVAL, 'GEST_REG', 'GESTIONE REGISTRI', '1'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_TIPO_FUNZIONE WHERE VAR_COD_TIPO='GEST_REG');
	
	
  INSERT INTO DPA_TIPO_FUNZIONE (SYSTEM_ID, VAR_COD_TIPO,VAR_DESC_TIPO_FUN, CHA_VIS)
  	SELECT
    SEQ.NEXTVAL, 'PROR', 'PROTOCOLLAZIONE ORDINARIA', '1'
  	FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_TIPO_FUNZIONE WHERE VAR_COD_TIPO='PROR');
	
	
  INSERT INTO DPA_TIPO_FUNZIONE (SYSTEM_ID, VAR_COD_TIPO,VAR_DESC_TIPO_FUN, CHA_VIS)
  	SELECT
    SEQ.NEXTVAL, 'PRAV', 'PROTOCOLLAZIONE AVANZATA', '1'
    FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_TIPO_FUNZIONE WHERE VAR_COD_TIPO='PRAV');
	
	
  INSERT INTO DPA_TIPO_FUNZIONE (SYSTEM_ID, VAR_COD_TIPO,VAR_DESC_TIPO_FUN, CHA_VIS)
  	SELECT
    SEQ.NEXTVAL, 'REPORT_TRASM', 'REPORT TRASMISSIONI', '1'
    FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_TIPO_FUNZIONE WHERE VAR_COD_TIPO='REPORT_TRASM');
	
	
  INSERT INTO DPA_TIPO_FUNZIONE (SYSTEM_ID, VAR_COD_TIPO,VAR_DESC_TIPO_FUN, CHA_VIS)
  	SELECT
    SEQ.NEXTVAL, 'PRAU', 'PROTOCOLLAZIONE AUTOMATICA', '1'
    FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_TIPO_FUNZIONE WHERE VAR_COD_TIPO='PRAU');

	
  INSERT INTO DPA_TIPO_FUNZIONE (SYSTEM_ID, VAR_COD_TIPO,VAR_DESC_TIPO_FUN, CHA_VIS)
  	SELECT
    SEQ.NEXTVAL,'PROTO_EME', 'PROTOCOLLAZIONE DI EMERGENZA', '1'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_TIPO_FUNZIONE WHERE VAR_COD_TIPO='PROTO_EME');
	
	-- DPA_FUNZIONI 3.2.0
	insert into dpa_funzioni (SYSTEM_ID,COD_FUNZIONE,VAR_DESC_FUNZIONE,ID_TIPO_FUNZIONE)
		VALUES (seq.nextval,'GEST_RUBRICA','GEST_RUBRICA',(select SYSTEM_ID from dpa_tipo_funzione where var_cod_tipo='PROR'));
	
	-- DPA_ANAGRAFICA_FUNZIONI
	INSERT INTO DPA_ANAGRAFICA_FUNZIONI(COD_FUNZIONE,VAR_DESC_FUNZIONE,CHA_TIPO_FUNZ)
		VALUES ('DO_TITOLARIO','Abilita l''inserimento di un nuovo nodo di titolario',NULL);
	
	INSERT INTO DPA_ANAGRAFICA_FUNZIONI(COD_FUNZIONE,VAR_DESC_FUNZIONE)
		VALUES ('GEST_RUBRICA','Abilita il sottomenu'' Rubrica dal menu'' Gestione');
		
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_NUOVOPROT', 'Abilita il sottomenu'' Nuovo Protocollo del menu'' Documenti', NULL
    FROM DUAL WHERE NOT EXISTS (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_NUOVOPROT');

  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_NUOVODOC', 'Abilita il sottomenu'' Nuovo Documento del menu'' Documenti', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_NUOVODOC');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_CERCA', 'Abilita il sottomenu'' Cerca del menu'' Documenti', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_CERCA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROTOCOLLA', 'Abilita il tab Protocollo nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROTOCOLLA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_IN_MIT_RUBRICA', 'Usato solo per la protocollazione semplice', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_IN_MIT_RUBRICA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_IN_MIT_DETTAGLI', 'Abilita il pulsante dei dettagli del mittente nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_IN_MIT_DETTAGLI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_IN_MIT_MODIFICA', 'Abilita il pulsante della modifica dei dettagli del mittente nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_IN_MIT_MODIFICA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_IN_MIT_STORIA', 'Abilita il pulsante dei dati storici dei mittenti nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_IN_MIT_STORIA');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_IN_MII_RUBRICA', 'Usato solo per la protocollazione semplice', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_IN_MII_RUBRICA');
		
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_IN_MII_DETTAGLI', 'Abilita il pulsante dei dettagli del mittente intermedio nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_IN_MII_DETTAGLI');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_IN_MII_MODIFICA', 'Abilita il pulsante della modifica dei dettagli del mittente intermedio nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_IN_MII_MODIFICA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_IN_MII_STORIA', 'Abilita il pulsante dei dati storici dei mittenti intermedi nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_IN_MII_STORIA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_IN_PRO_VERIFICAPREC', 'Abilita il pulsante di verifica del precedente protocollo mittente', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_IN_PRO_VERIFICAPREC');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_GET_ADL', 'Abilita il pulsante della selezione dei documenti protocollati da ADL nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_GET_ADL');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_PROTOCOLLA', 'Abilita il pulsante Protocolla nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_PROTOCOLLA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_SALVA', 'Abilita il pulsante Salva nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_SALVA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_RIPROPONI', 'Abilita il pulsante Riproponi nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_RIPROPONI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_SE_STAMPA', 'Abilita il pulsante Stampa nella sezione segnatura nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_SE_STAMPA');
	
	 
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_OG_OGGETTARIO', 'Abilita il pulsante di selezione di un oggetto nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_OG_OGGETTARIO');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_OG_MODIFICA', 'Abilita il pulsante di modifica di un oggetto nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_OG_MODIFICA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_OG_STORIA', 'Abilita il pulsante della storia oggetto nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_OG_STORIA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_OUT_DES_RUBRICA', 'Abilita il pulsante di selezione di un destinatario nella rubrica nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_OUT_DES_RUBRICA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_OUT_DES_DETTAGLI', 'Abilita il pulsante del dettaglio dei destinatari presenti nella list box della pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_OUT_DES_DETTAGLI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_OUT_DES_PIU', 'Abilita il pulsante di aggiunta di un destinatario nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_OUT_DES_PIU');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_OUT_DES_MODIFICA', 'Abilita il pulsante di modifica del destinatario nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_OUT_DES_MODIFICA');
	
	 
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_OUT_DES_STORIA', 'Abilita il pulsante dei dati storici del destinatario nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_OUT_DES_STORIA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROFILO', 'Abilita il tab Profilo nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROFILO');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PRO_STAMPASCHEDA', 'Abilita il pulsante Stampa nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PRO_STAMPASCHEDA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_ADD_ADL', 'Abilita il pulsante di aggiunta ADL nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_ADD_ADL');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_DOC_VISUALIZZA', 'Abilita il pulsante Visualizza di un documento acquisito o presente sul file-system', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_DOC_VISUALIZZA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_DOC_VISUALIZZAZOOM', 'Abilita il pulsante Zoom di un documento acquisito o presente sul file-system', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_DOC_VISUALIZZAZOOM');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'FASC_TAB_TRASMISSIONI', 'Abilita il tab Trasmissioni nella pagina di gestione di un fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='FASC_TAB_TRASMISSIONI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'FASC_NEW_FOLDER', 'Abilita il pulsante Aggiungi nella pagina di gestione di un fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='FASC_NEW_FOLDER');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'GEST_STAMPE', 'Abilita il sottomenu'' Stampe e rapporti del menu'' Gestione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='GEST_STAMPE');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'GEST_REG_MODIFICA', 'Abilita il pulsante Modifica nella pagina di gestione di un registro', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='GEST_REG_MODIFICA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'TRAS_CERCA', 'Abilita il sottomenu'' Cerca del menu'' Trasmissioni', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='TRAS_CERCA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_CLA_VIS_PROC', 'Abilita il pulsante di visualizzazione dei fascicoli procedimentali con la classifica selezionata', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_CLA_VIS_PROC');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_CLA_GET_ADL', 'Abilita il pulsante di visualizzazione dei fascicoli procedimentali in area di lavoro', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_CLA_GET_ADL');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_CLA_INSERISCI', 'Abilita il pulsante Inserisci nella pagina di classificazione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_CLA_INSERISCI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_TRA_MODIFICA', 'Abilita il pulsante Modifica nelle pagine di trasmissione di un documento e di un fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_TRA_MODIFICA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_TRA_TRASMETTI', 'Abilita il pulsante Trasmetti nelle pagine di trasmissione di un documento e di un fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_TRA_TRASMETTI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_OUT_SPEDISCI', 'Abilita il pulsante Spedisci nalla pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_OUT_SPEDISCI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'GEST_AREA_LAV', 'Abilita il sottomenu'' Area di lavoro del menu'' Gestione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='GEST_AREA_LAV');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_OUT_DES_ELIMINA', 'Abilita il pulsante di eliminazione dei destinatari presenti nella list box della pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_OUT_DES_ELIMINA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'TRAS_NUOVA_DA_TEMPL', 'Abilita il pulsante Nuova da template nella pagina di gestione delle trasmissioni', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='TRAS_NUOVA_DA_TEMPL');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'TRAS_SALVA_TEMPL', 'Abilita il pulsante Salva template nella pagina di gestione delle trasmissioni', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='TRAS_SALVA_TEMPL');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_OUT_DES_TIPO_INVIO', 'Abilita il pulsante di descrizione tipo di spedizione nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_OUT_DES_TIPO_INVIO');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_DTA_MODIFICA', 'Abilita il pulsante di modifica della data di arrivo nella pagina della protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_DTA_MODIFICA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PRO_ELIMINAPAROLE', 'Abilita il pulsante di eliminazione delle parole chiave nella pagina della creazione del profilo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PRO_ELIMINAPAROLE');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_PROTOCOLLAG', 'Abilita il pulsante Protocolla in giallo nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_PROTOCOLLAG');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_ANNULLA', 'Abilita il pulsante Cancella nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_ANNULLA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'MENU_DOCUMENTI', 'Abilita il sottomenu'' Nuovo Protocollo del menu'' Documenti', 'W'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='MENU_DOCUMENTI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'MENU_RICERCA', 'Abilita il menu'' Ricerca', 'R'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='MENU_RICERCA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'MENU_FASCICOLI', 'Abilita il menu'' Fascicoli', 'W'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='MENU_FASCICOLI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'MENU_TRASMISSIONI', 'Abilita il menu'' Trasmissione', 'W'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='MENU_TRASMISSIONI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'MENU_GESTIONE', 'Abilita il menu'' Gestione', 'W'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='MENU_GESTIONE');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'MENU_OPZIONI', 'Abilita il menu'' Opzioni', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='MENU_OPZIONI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'MENU_LOGOUT', 'Abilita il menu'' Logout', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='MENU_LOGOUT');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'GEST_REGISTRI', 'Abilita il sottomenu'' Registri del menu'' Gestione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='GEST_REGISTRI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'OPZIONI_CAMBIA_PWD', 'Abilita il sottomenu'' Cambia password del menu'' Opzioni', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='OPZIONI_CAMBIA_PWD');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_ALLEGATI', 'Abilita il Tab Allegati nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_ALLEGATI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_ALL_AGGIUNGI', 'Abilita il pulsante Nuovo nella pagina di gestione degli allegati di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_ALL_AGGIUNGI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_ALL_MODIFICA', 'Abilita il pulsante Modifica nella pagina di gestione degli allegati di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_ALL_MODIFICA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_ALL_RIMUOVI', 'Abilita il pulsante Rimuovi nella pagina di gestione degli allegati di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_ALL_RIMUOVI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_ALL_SOSTITUISCI', 'Abilita il pulsante Scambia nella pagina di gestione degli allegati di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_ALL_SOSTITUISCI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_VERSIONI', 'Abilita il tab Versioni nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_VERSIONI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_VER_NUOVA', 'Abilita il pulsante Nuovo nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_VER_NUOVA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_VER_MODIFICA', 'Abilita il pulsante Modifica nella pagina di gestione delle versioni di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_VER_MODIFICA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_VER_RIMUOVI', 'Abilita il pulsante Rimuovi nella pagina di gestione delle versioni di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_VER_RIMUOVI');
	
	 
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_CLASSIFICAZIONE', 'Abilita il Tab Classifica nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_CLASSIFICAZIONE');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_TRASMISSIONI', 'Abilita il tab Trasmissioni nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_TRASMISSIONI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_TRA_NUOVA', 'Abilita il pulsante Nuovo nelle pagine di trasmissione di un documento e di un fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_TRA_NUOVA');
	
	 
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'FASC_CANCELLA', 'Abilita il pulsante Rimuovi nella pagina di ricerca di un fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='FASC_CANCELLA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_CLA_TITOLARIO', 'Abilita il pulsante di visualizzazione del Titolario nella pagina di Classificazione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_CLA_TITOLARIO');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PRO_OGGETTARIO', 'Abilita il pulsante di selezione di un oggetto nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PRO_OGGETTARIO');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PRO_SELEZIONA', 'Abilita il pulsante di selezione di una parole chiave nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PRO_SELEZIONA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PRO_VISIBILITA', 'Abilita il pulsante di visibilita'' nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PRO_VISIBILITA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PRO_SALVA', 'Abilita il pulsante Salva nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PRO_SALVA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PRO_RIMUOVI', 'Abilita il pulsante Rimuovi nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PRO_RIMUOVI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PRO_PREDISPONI', 'Abilita il pulsante Predisponi nella pagina di gestione di un documento', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PRO_PREDISPONI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_DOC_ACQUISISCI', 'Abilita il pulsante di acquisizione di un file-documento tramite lo scanner o file-system', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_DOC_ACQUISISCI');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'FASC_GESTIONE', 'Abilita il sottomenu'' Gestione fascicolo del menu'' Fascicoli', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='FASC_GESTIONE');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'FASC_TAB_DOCUMENTO', 'Abilita il tab Documenti nella pagina di gestione di un fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='FASC_TAB_DOCUMENTO');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'FASC_ADD_ADL', 'Abilita il pulsante Aggiungi area lavoro nella pagina di gestione di un fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='FASC_ADD_ADL');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'FASC_MOD_FASCICOLO', 'Abilita il pulsante Modifica nella pagina di gestione di un fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='FASC_MOD_FASCICOLO');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_TRA_STAMPA', 'Abilita il pulsante di stampa delle trasmissioni relative ad un documento indipendentemente dalla visibilita''', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_TRA_STAMPA');

	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_DOC_FIRMA', 'Abilita il pulsante della firma di un documento acquisito o presente sul file-system', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_DOC_FIRMA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'FASC_APRICHIUDI', 'Abilita il pulsante Chiudi e riapri fascicolo nella pagina di gestione di un fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='FASC_APRICHIUDI');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'FASC_DEL_FOLDER', 'Abilita il pulsante Rimuovi nella pagina di gestione di un fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='FASC_DEL_FOLDER');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'FASC_INS_DOC', 'Abilita il pulsante Inserisci da area di lavoro nella pagina di gestione di un fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='FASC_INS_DOC');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'FASC_MOD_FOLDER', 'Abilita il pulsante Modifica nella pagina di gestione di un fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='FASC_MOD_FOLDER');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'GEST_CASELLA_IST', 'Abilita il pulsante Casella istituzionale nella pagina di gestione di un registro', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='GEST_CASELLA_IST');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'GEST_REG_C_STATO', 'Abilita il pulsante Cambia stato nella pagina di gestione di un registro', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='GEST_REG_C_STATO');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'GEST_REG_STAMPA', 'Abilita il pulsante Stampa nella pagina di gestione di un registro', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='GEST_REG_STAMPA');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'PROTO_IN', 'Abilita la protocollazione in ingresso nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='PROTO_IN');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'PROTO_OUT', 'Abilita la protocollazione in uscita nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='PROTO_OUT');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_DOC_ADD_PAROLA', 'Abilita il pulsante che consente di aggiungere una parola chiave dalla popup delle parole chiave', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_DOC_ADD_PAROLA');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'PROTO_EME', 'Abilita i ruoli alla creazione dei protocolli di emergenza', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='PROTO_EME');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'PROTO_OWN', 'Abilita la protocollazione interna nella pagina di protocollazione e nelle pagine di ricerca dei documenti', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='PROTO_OWN');

  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_MIT_MODIFICA','Abilita il pulsante di modifica di un mittente nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_MIT_MODIFICA');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_MIT_INT_MODIFICA','Abilita il pulsante di modifica di un mittente intermedio nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_MIT_INT_MODIFICA');
	
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_DEST_MODIFICA','Abilita il pulsante di modifica di un destinatario intermedio nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_DEST_MODIFICA');
	
  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_PROT_DESTCC_MODIFICA','Abilita il pulsante di modifica di un destinatarioCC intermedio nella pagina di protocollazione', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROT_DESTCC_MODIFICA');

  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'FASC_NUOVO', 'Abilita l''inserimento di un nuovo fascicolo', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='FASC_NUOVO');

  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'GEST_PROSPETTI', 'Abilita il pulsante per la gestione dei Prospetti Riepilogativi', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='GEST_PROSPETTI');
	

  INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_TRASM_SET_VISTE', 'Abilita il pulsante Elimina trasmissioni nel risultato della ricerca delle COSE DA FARE', NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_TRASM_SET_VISTE');
	
	--3.2.0
 INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'GEST_ORGANIGRAMMA','Abilita il sottomenu'' Organigramma del menu'' Gestione per la visualizzazione e stampa dell''organigramma',NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='GEST_ORGANIGRAMMA');
	
	INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'STAMPA_REG_UO','Abilita la stampa dei protocolli filtrata per uo',NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='STAMPA_REG_UO');
---non era presente nel tool	
	INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  	SELECT
    'DO_SMISTA','Abilita il pulsante di smistamento documenti nella sezione COSE DA FARE > Documenti',NULL
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_SMISTA');
---	
--fine insert dpa_anagrafica_funzione
	
	--POPOLAMENTO DPA_ANAGRAFICA LOG
	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'LOGIN', 'Accesso all''applicazione DocsPA', 'UTENTE', 'LOGIN'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='LOGIN');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'LOGOFF','Effettuata la Logoff all''applicazione DocsPA','UTENTE','LOGOFF'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='LOGOFF');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'AGG_PROT','Aggiunto un nuovo protocollo','DOCUMENTO','DOCUMENTOPROTOCOLLA'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='AGG_PROT');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'DOC_PROT','Protocollato un documento gia'' esistente','DOCUMENTO','DOCUMENTOPROTOCOLLA2'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='DOC_PROT');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'AGG_DOC_GRIGIO','Inserito un documento grigio','DOCUMENTO','DOCUMENTOADDDOCGRIGIA'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='AGG_DOC_GRIGIO');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'DEL_DOC','Rimosso un documento','DOCUMENTO','DOCUMENTOEXECRIMUOVISCHEDA'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='DEL_DOC');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'UPD_DOC','Modificato un documento','DOCUMENTO','DOCUMENTOSAVEDOCUMENTO'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='DEL_DOC');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'ANNULLA_PROTO','Annullato un protocollo','DOCUMENTO','DOCUMENTOEXECANNULLAPROT'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='ANNULLA_PROTO');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'OPEN_DET_DOC','Aperto dettaglio di un documento','DOCUMENTO','DOCUMENTOGETDETTAGLIODOCUMENTO'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='OPEN_DET_DOC');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'ADD_ALLEGATO','Aggiunto un nuovo allegato ad un documento','ALLEGATO','DOCUMENTOAGGIUNGIALLEGATO'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='ADD_ALLEGATO');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'ADD_VERSION','Aggiunta una nuova versione ad un documento','DOCUMENTO','DOCUMENTOAGGIUNGIVERSIONE'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='ADD_VERSION');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'TRASM_DOC','Trasmesso un documento','TRASMISSIONE','TRASMISSIONEEXECUTETRASM'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='TRASM_DOC');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'NEW_FASC','Creato un nuovo fascicolo','FASCICOLO','FASCICOLAZIONENEWFASCICOLO'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='NEW_FASC');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'NEW_FOLDER_FASC','Creato un nuovo folder in un fascicolo','FOLDER','FASCICOLAZIONENEWFOLDER'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='NEW_FOLDER_FASC');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'STATO_REG','Cambiato stato al registro','REGISTRO','REGISTRICAMBIASTATO'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='STATO_REG');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'STAMP_REG','Stampato Registro','REGISTRO','REGISTRIDISTAMPA'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='STAMP_REG');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'GET_FILE','Visualizza un documento','DOCUMENTO','DOCUMENTOGETFILE'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='GET_FILE');

	  INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'GET_FIRMA','Acquisizione di un documento Firmato','DOCUMENTO','DOCUMENTOPUTFILE'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='GET_FIRMA');
    
   	INSERT INTO DPA_ANAGRAFICA_LOG (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
  	SELECT
    SEQ.NEXTVAL, 'STAMPA_ETICHETTA','Stampata etichetta di un documento','DOCUMENTO','DOCUMENTOSTAMPAETICHETTA'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='STAMPA_ETICHETTA');
 
	Insert into DPA_ANAGRAFICA_LOG
   (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
 select
    seq.nextval, 'CHECK_CASELLA', 'Controllo casella istituzionale', 'INTEROPERABILITA', 'INTEROPERABILITARICEZIONE'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='CHECK_CASELLA');
 
	Insert into DPA_ANAGRAFICA_LOG ( SYSTEM_ID,  VAR_CODICE,  VAR_DESCRIZIONE,  VAR_OGGETTO,  VAR_METODO)
select  seq.nextval,  'SPEDIZIONE_DOCUMENTO',  'Spedizione documento',  'INTEROPERABILITA',  'INTEROPERABILITASPEDIZIONE'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_ANAGRAFICA_LOG WHERE VAR_CODICE='STAMPA_ETICHETTA');
 
	--FINE POPOLAMENTO DPA_ANAGRAFICA LOG
	
	-- TIPO ATTO
	  INSERT INTO DPA_TIPO_ATTO (SYSTEM_ID, VAR_DESC_ATTO)
  	SELECT
    SEQ.NEXTVAL, 'DECRETO'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_TIPO_ATTO WHERE VAR_DESC_ATTO='DECRETO');

	  INSERT INTO DPA_TIPO_ATTO (SYSTEM_ID, VAR_DESC_ATTO)
  	SELECT
    SEQ.NEXTVAL, 'DELIBERA'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_TIPO_ATTO WHERE VAR_DESC_ATTO='DELIBERA');
	
	-- FINE TIPO ATTO
	
	-- profilazione dinamica
	  INSERT INTO DPA_TIPO_OGGETTO (SYSTEM_ID, TIPO, DESCRIZIONE)
  	SELECT
    SEQ.NEXTVAL, 'Campo di testo','CampoDiTesto'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_TIPO_OGGETTO WHERE DESCRIZIONE='CampoDiTesto');

	  INSERT INTO DPA_TIPO_OGGETTO (SYSTEM_ID, TIPO, DESCRIZIONE)
  	SELECT
    SEQ.NEXTVAL, 'Casella di selezione','CasellaDiSelezione'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_TIPO_OGGETTO WHERE DESCRIZIONE='CasellaDiSelezione');

	  INSERT INTO DPA_TIPO_OGGETTO (SYSTEM_ID, TIPO, DESCRIZIONE)
  	SELECT
    SEQ.NEXTVAL, 'Selezione esclusiva','SelezioneEsclusiva'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_TIPO_OGGETTO WHERE DESCRIZIONE='SelezioneEsclusiva');

	  INSERT INTO DPA_TIPO_OGGETTO (SYSTEM_ID, TIPO, DESCRIZIONE)
  	SELECT
    SEQ.NEXTVAL, 'Menu a tendina','MenuATendina'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_TIPO_OGGETTO WHERE DESCRIZIONE='MenuATendina');

	  INSERT INTO DPA_TIPO_OGGETTO (SYSTEM_ID, TIPO, DESCRIZIONE)
  	SELECT
    SEQ.NEXTVAL, 'Contatore','Contatore'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_TIPO_OGGETTO WHERE DESCRIZIONE='Contatore');

	  INSERT INTO DPA_TIPO_OGGETTO (SYSTEM_ID, TIPO, DESCRIZIONE)
  	SELECT
    SEQ.NEXTVAL, 'Data','Data'
    FROM DUAL WHERE NOT EXISTS 
    (SELECT * FROM DPA_TIPO_OGGETTO WHERE DESCRIZIONE='Data');
    
---3.2.1
		Insert into DPA_ANAGRAFICA_LOG
   			(SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
 		Values
   			(seq.nextval, 'BLOCCO_DOCUMENTO', 'Blocco', 'DOCUMENTO', 'CHECKOUTDOCUMENT');
	
		Insert into DPA_ANAGRAFICA_LOG
   			(SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
 		Values
   			(seq.nextval, 'RILASCIO_DOCUMENTO', 'Rilascio del blocco', 'DOCUMENTO', 'CHECKINDOCUMENT');

	
		Insert into DPA_ANAGRAFICA_LOG
		   	(SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE, VAR_OGGETTO, VAR_METODO)
		Values
   			(seq.nextval, 'ANNULLA_BLOCCO_DOCUMENTO', 'Annullamento del blocco', 'DOCUMENTO', 'UNDOCHECKOUTDOCUMENT');

--END 3.2.1	
    COMMIT;
END;	


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (APPLICATION='GEN_P7M') ;
  		if (cnt = 0) then
			  INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, 
                        FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP,
                        DOS_MONITORING, LANGUAGE, VIEWER, PRINTING, DISABLED, OUTPUT_EXTS, PDFCOMPAT, INTEGRATED,
                        FILE_TYPES, SUPER_APP, USE_UNCNAME, DIRMON_STUBCHECK, MIME_TYPE ) VALUES ( 
                        SEQ.NEXTVAL, 'GEN_P7M', 'GEN_P7M', '2', NULL, NULL, 'P7M', NULL, NULL, NULL
                        , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'application/pkcs7-mime');
		end if;
	end if;
	end;
end;
/

--3.3
begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_TXT');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_TXT', 'GEN_TXT', 2, 'TXT', 'application/txt'); 
	end if;
  END;
end;
/

begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_INF');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_INF', 'GEN_INF', 2, 'INF', 'APPLICATION/INF'); 
	end if;
  END;
end;
/

begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_BMP');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_BMP', 'GEN_BMP', 2, 'BMP', 'image/bmp'); 
	end if;
  END;
end;
/

begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_SQL');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_SQL', 'GEN_SQL', 2, 'SQL', 'application/sql'); 
	end if;
  END;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_TIFF');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES (seq.nextval, 'GEN_TIFF', 'GEN_TIFF', 2, 'TIFF', 'image/tiff'); 
	end if;
  END;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_LOG');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES (seq.nextval, 'GEN_LOG', 'GEN_LOG', 2, 'LOG', 'application/log'); 
	end if;
  END;
end;
/

begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_P7M');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_P7M', 'GEN_P7M', 2, 'P7M', 'application/pkcs7-mime'); 
	end if;
  END;
end;
/

begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_PDF.P7M');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_PDF.P7M', 'GEN_PDF.P7M', 2, 'PDF.P7M', 'application/pkcs7-mime'); 
	end if;
  END;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_TXT.P7M');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_TXT.P7M', 'GEN_TXT.P7M', 2, 'TXT.P7M', 'application/pkcs7-mime');  
	end if;
  END;
end;
/

begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_DOC.P7M');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_DOC.P7M', 'GEN_DOC.P7M', 2, 'DOC.P7M', 'application/pkcs7-mime');   
	end if;
  END;
end;
/

begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_TIF.P7M');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_TIF.P7M', 'GEN_TIF.P7M', 2, 'TIF.P7M', 'application/pkcs7-mime');   
	end if;
  END;
end;
/

begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_TIFF.P7M');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_TIFF.P7M', 'GEN_TIFF.P7M', 2, 'TIFF.P7M', 'application/pkcs7-mime');   
	end if;
  END;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_JPG.P7M');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_JPG.P7M', 'GEN_JPG.P7M', 2, 'JPG.P7M', 'application/pkcs7-mime');   
	end if;
  END;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_JPEG.P7M');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_JPEG.P7M', 'GEN_JPEG.P7M', 2, 'JPEG.P7M', 'application/pkcs7-mime');   
	end if;
  END;
end;
/

begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_INF.P7M');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_INF.P7M', 'GEN_INF.P7M', 2, 'INF.P7M', 'application/pkcs7-mime');   
	end if;
  END;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_XSL.P7M');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_XSL.P7M', 'GEN_XSL.P7M', 2, 'XSL.P7M', 'application/pkcs7-mime');   
	end if;
  END;
end;
/

begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_JPEG.P7M');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_JPEG.P7M', 'GEN_JPEG.P7M', 2, 'JPEG.P7M', 'application/pkcs7-mime');   
	end if;
  END;
end;
/

begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_XML.P7M');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_XML.P7M', 'GEN_XML.P7M', 2, 'XML.P7M', 'application/pkcs7-mime');   
	end if;
  END;
end;
/

begin
	declare cnt int;
  begin
	select count(*) into cnt from APPS where (APPLICATION='GEN_HMT.P7M');
	if (cnt = 0) then
		INSERT INTO APPS ( SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, DEFAULT_EXTENSION, MIME_TYPE ) 
		VALUES ( seq.nextval, 'GEN_HMT.P7M', 'GEN_HMT.P7M', 2, 'HMT.P7M', 'application/pkcs7-mime');   
	end if;
  END;
end;
/

--update dei nuovi campi
begin
	declare cnt int;

  begin
	select count(*) into cnt from user_tables where table_name='DPA_AMMINISTRA';
	if (cnt != 0) then		
			select count(*) into cnt from cols where table_name='DPA_AMMINISTRA' and column_name='NUM_GG_PERM_TODOLIST';
  		if (cnt != 0) then
			UPDATE DPA_AMMINISTRA SET NUM_GG_PERM_TODOLIST = '0';
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;

  begin
	select count(*) into cnt from user_tables where table_name='DPA_AMMINISTRA';
	if (cnt != 0) then		
			select count(*) into cnt from cols where table_name='DPA_AMMINISTRA' and column_name='CHA_ATTIVA_GG_PERM_TODOLIST';
  		if (cnt != 0) then
			UPDATE DPA_AMMINISTRA SET CHA_ATTIVA_GG_PERM_TODOLIST = '0';
		end if;
	end if;
	end;
end;
/

---

begin
	declare cnt int;

  begin
	select count(*) into cnt from user_tables where table_name='DPA_TRASM_UTENTE';
	if (cnt != 0) then		
			select count(*) into cnt from cols where table_name='DPA_TRASM_UTENTE' and column_name='CHA_IN_TODOLIST';
  		if (cnt != 0) then
			UPDATE DPA_TRASM_UTENTE SET CHA_IN_TODOLIST = '0';
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;

  begin
	select count(*) into cnt from user_tables where table_name='DPA_TRASM_UTENTE';
	if (cnt != 0) then		
			select count(*) into cnt from cols where table_name='DPA_TRASM_UTENTE' and column_name='DTA_RIMOZIONE_TODOLIST';
  		if (cnt != 0) then
			UPDATE DPA_TRASM_UTENTE SET DTA_RIMOZIONE_TODOLIST = NULL;
		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;

  begin
	select count(*) into cnt from user_tables where table_name='DPA_TRASM_UTENTE';
	if (cnt != 0) then		
			select count(*) into cnt from cols where table_name='DPA_TRASM_UTENTE' and column_name='CHA_IN_TODOLIST';
  		if (cnt != 0) then
			UPDATE DPA_TRASM_UTENTE SET CHA_IN_TODOLIST = '1'
			WHERE system_id IN (
				SELECT C.SYSTEM_ID
					FROM DPA_TRASMISSIONE A, DPA_TRASM_SINGOLA B, DPA_TRASM_UTENTE C, DPA_RAGIONE_TRASM D
						WHERE A.SYSTEM_ID=B.ID_TRASMISSIONE AND 
								B.SYSTEM_ID=C.ID_TRASM_SINGOLA AND 
								C.CHA_VALIDA='1' AND 
								A.DTA_INVIO IS NOT NULL AND 
								A.CHA_TIPO_OGGETTO = 'D' AND 
								B.ID_RAGIONE=D.SYSTEM_ID AND 
								((D.CHA_TIPO_RAGIONE='W' AND C.CHA_ACCETTATA='0' AND C.CHA_RIFIUTATA='0' AND C.CHA_VALIDA='1') OR 
								((D.CHA_TIPO_RAGIONE='N' OR D.CHA_TIPO_RAGIONE='I') AND C.CHA_VISTA='0'))						  				  	
			);
		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;

  begin
	select count(*) into cnt from user_tables where table_name='DPA_TRASM_UTENTE';
	if (cnt != 0) then		
			select count(*) into cnt from cols where table_name='DPA_TRASM_UTENTE' and column_name='CHA_IN_TODOLIST';
  		if (cnt != 0) then
			UPDATE DPA_TRASM_UTENTE SET CHA_IN_TODOLIST = '1'
				WHERE system_id IN (
				SELECT C.SYSTEM_ID
						FROM DPA_TRASMISSIONE A, DPA_TRASM_SINGOLA B, DPA_TRASM_UTENTE C, DPA_RAGIONE_TRASM D
						WHERE A.SYSTEM_ID=B.ID_TRASMISSIONE AND 
						B.SYSTEM_ID=C.ID_TRASM_SINGOLA AND 
						C.CHA_VALIDA='1' AND 
						A.DTA_INVIO IS NOT NULL AND 
						A.CHA_TIPO_OGGETTO = 'F' AND 
						B.ID_RAGIONE=D.SYSTEM_ID AND 
						((D.CHA_TIPO_RAGIONE='W' AND C.CHA_ACCETTATA='0' AND C.CHA_RIFIUTATA='0' AND C.CHA_VALIDA='1') OR 
						((D.CHA_TIPO_RAGIONE='N' OR D.CHA_TIPO_RAGIONE='I') AND C.CHA_VISTA='0'))						  				  	
				);
		end if;
	end if;
	end;
end;
/

BEGIN
DECLARE cnt INT;
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_ANAGRAFICA_FUNZIONI WHERE (COD_FUNZIONE='DO_RIC_VISIBILITA');
	IF (cnt = 0) THEN
				INSERT INTO DPA_ANAGRAFICA_FUNZIONI ( COD_FUNZIONE, VAR_DESC_FUNZIONE,CHA_TIPO_FUNZ ) 
				VALUES ('DO_RIC_VISIBILITA', 'Abilita il sottomenu'' per la ricerca della Visibilita'' dei documenti', NULL);			
				cnt := 0;
	END IF;
  END;
END;
/
BEGIN
DECLARE cnt INT;
  BEGIN
	-- INSERISCO L'ASSOCIAZIONE MICRO -- MACRO PER TUTTI 
	SELECT COUNT(*) INTO cnt FROM DPA_FUNZIONI WHERE (COD_FUNZIONE='DO_RIC_VISIBILITA');
	IF (cnt = 0) THEN
		INSERT INTO DPA_FUNZIONI (SYSTEM_ID,COD_FUNZIONE,VAR_DESC_FUNZIONE,ID_TIPO_FUNZIONE)
		SELECT SEQ.NEXTVAL,'DO_RIC_VISIBILITA','DO_RIC_VISIBILITA',DTF.SYSTEM_ID AS SYS_MACRO
		FROM DPA_TIPO_FUNZIONE DTF,DPA_FUNZIONI  DF
		WHERE DTF.system_id = DF.ID_TIPO_FUNZIONE  AND DF.COD_FUNZIONE = 'DO_CERCA';
	END IF;
  END;
END;
/ 

BEGIN
DECLARE cnt INT;
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_ANAGRAFICA_FUNZIONI WHERE (COD_FUNZIONE='DO_RIC_VISIBILITA');
	IF (cnt = 0) THEN
				INSERT INTO DPA_ANAGRAFICA_FUNZIONI ( COD_FUNZIONE, VAR_DESC_FUNZIONE,CHA_TIPO_FUNZ ) 
				VALUES ('DO_RIC_VISIBILITA', 'Abilita il sottomenu'' per la ricerca della Visibilita'' dei documenti', NULL);			
				cnt := 0;
	END IF;
  END;
END;
/
BEGIN
DECLARE cnt INT;
  BEGIN
	-- INSERISCO L'ASSOCIAZIONE MICRO -- MACRO PER TUTTI 
	SELECT COUNT(*) INTO cnt FROM DPA_FUNZIONI WHERE (COD_FUNZIONE='DO_RIC_VISIBILITA');
	IF (cnt = 0) THEN
		INSERT INTO DPA_FUNZIONI (SYSTEM_ID,COD_FUNZIONE,VAR_DESC_FUNZIONE,ID_TIPO_FUNZIONE)
		SELECT SEQ.NEXTVAL,'DO_RIC_VISIBILITA','DO_RIC_VISIBILITA',DTF.SYSTEM_ID AS SYS_MACRO
		FROM DPA_TIPO_FUNZIONE DTF,DPA_FUNZIONI  DF
		WHERE DTF.system_id = DF.ID_TIPO_FUNZIONE  AND DF.COD_FUNZIONE = 'DO_CERCA';
	END IF;
  END;
END;
/ 


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='LWP') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'LOTUS WORD PRO', 'Lotus Word Pro', 'N', 'N', 2, 'Y', 'N', 'LWP', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/lotus');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='MSG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME)
 Values
   (seq.nextval, 'MS OUTLOOK', 'Microsoft Outlook', 'N', 'N', 2, 'Y', 'N', 'MSG', 'Y', 'Y', 1, 'N', '1', 'N', 'N');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='DOC') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS WORD', 'Microsoft Word', 'N', 'Y', 2, 'Y', 'N', 'DOC', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/msword');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='XLS') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS EXCEL', 'Microsoft Excel', 'N', 'N', 3, 'Y', 'N', 'XLS', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/vnd.ms-excel');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PDF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'ACROBAT', 'Adobe Acrobat', 'N', 'N', 2, 'Y', 'N', 'PDF', 'Y', 'Y', 1, 'N', 'N', 'N', 'application/pdf');
		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='WPD') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'WORDPERFECT', 'WordPerfect', 'N', 'Y', 2, 'Y', 'N', 'WPD', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/wordpfct');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PPT') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS POWERPOINT', 'Microsoft PowerPoint', 'N', 'Y', 2, 'Y', 'N', 'PPT', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/vnd.ms-powerpoint');
		end if;
	end if;
	end;
end;
/



begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='GIF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB GIF', 'Web Publishing GIF', 'N', 'N', 2, 'Y', 'N', 'GIF', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/gif');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='JPG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB JPG', 'Web Publishing JPG', 'N', 'N', 2, 'Y', 'N', 'JPG', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/jpg');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PNG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB PNG', 'Web Publishing PNG', 'N', 'N', 2, 'Y', 'N', 'PNG', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/png');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='XML') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB XML', 'Web Publishing XML', 'N', 'N', 2, 'Y', 'N', 'XML', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/xml');
		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='RTF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, VALID_ON_PROFILE, DEFAULT_EXTENSION, ON_DESKTOP, VIEWER, PRINTING, DISABLED, MIME_TYPE)
 Values
   (seq.nextval, 'RTF', 'Rich Text Format', 2, 'Y', 'RTF', 'Y', 935, 0, 'N', 'application/rtf');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='P7M') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'DIGITAL SIGNF', 'Digital Sign Reader', 'N', 'N', 2, 'Y', 'N', 'P7M', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/pkcs7-mime');

   		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='LWP') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'LOTUS WORD PRO', 'Lotus Word Pro', 'N', 'N', 2, 'Y', 'N', 'LWP', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/lotus');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='MSG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME)
 Values
   (seq.nextval, 'MS OUTLOOK', 'Microsoft Outlook', 'N', 'N', 2, 'Y', 'N', 'MSG', 'Y', 'Y', 1, 'N', '1', 'N', 'N');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='DOC') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS WORD', 'Microsoft Word', 'N', 'Y', 2, 'Y', 'N', 'DOC', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/msword');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='XLS') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS EXCEL', 'Microsoft Excel', 'N', 'N', 3, 'Y', 'N', 'XLS', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/vnd.ms-excel');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PDF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'ACROBAT', 'Adobe Acrobat', 'N', 'N', 2, 'Y', 'N', 'PDF', 'Y', 'Y', 1, 'N', 'N', 'N', 'application/pdf');
		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='WPD') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'WORDPERFECT', 'WordPerfect', 'N', 'Y', 2, 'Y', 'N', 'WPD', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/wordpfct');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PPT') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS POWERPOINT', 'Microsoft PowerPoint', 'N', 'Y', 2, 'Y', 'N', 'PPT', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/vnd.ms-powerpoint');
		end if;
	end if;
	end;
end;
/



begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='GIF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB GIF', 'Web Publishing GIF', 'N', 'N', 2, 'Y', 'N', 'GIF', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/gif');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='JPG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB JPG', 'Web Publishing JPG', 'N', 'N', 2, 'Y', 'N', 'JPG', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/jpg');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PNG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB PNG', 'Web Publishing PNG', 'N', 'N', 2, 'Y', 'N', 'PNG', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/png');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='XML') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB XML', 'Web Publishing XML', 'N', 'N', 2, 'Y', 'N', 'XML', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/xml');
		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='RTF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, VALID_ON_PROFILE, DEFAULT_EXTENSION, ON_DESKTOP, VIEWER, PRINTING, DISABLED, MIME_TYPE)
 Values
   (seq.nextval, 'RTF', 'Rich Text Format', 2, 'Y', 'RTF', 'Y', 935, 0, 'N', 'application/rtf');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='P7M') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'DIGITAL SIGNF', 'Digital Sign Reader', 'N', 'N', 2, 'Y', 'N', 'P7M', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/pkcs7-mime');

   		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='LWP') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'LOTUS WORD PRO', 'Lotus Word Pro', 'N', 'N', 2, 'Y', 'N', 'LWP', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/lotus');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='MSG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME)
 Values
   (seq.nextval, 'MS OUTLOOK', 'Microsoft Outlook', 'N', 'N', 2, 'Y', 'N', 'MSG', 'Y', 'Y', 1, 'N', '1', 'N', 'N');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='DOC') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS WORD', 'Microsoft Word', 'N', 'Y', 2, 'Y', 'N', 'DOC', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/msword');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='XLS') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS EXCEL', 'Microsoft Excel', 'N', 'N', 3, 'Y', 'N', 'XLS', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/vnd.ms-excel');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PDF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'ACROBAT', 'Adobe Acrobat', 'N', 'N', 2, 'Y', 'N', 'PDF', 'Y', 'Y', 1, 'N', 'N', 'N', 'application/pdf');
		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='WPD') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'WORDPERFECT', 'WordPerfect', 'N', 'Y', 2, 'Y', 'N', 'WPD', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/wordpfct');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PPT') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS POWERPOINT', 'Microsoft PowerPoint', 'N', 'Y', 2, 'Y', 'N', 'PPT', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/vnd.ms-powerpoint');
		end if;
	end if;
	end;
end;
/



begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='GIF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB GIF', 'Web Publishing GIF', 'N', 'N', 2, 'Y', 'N', 'GIF', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/gif');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='JPG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB JPG', 'Web Publishing JPG', 'N', 'N', 2, 'Y', 'N', 'JPG', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/jpg');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PNG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB PNG', 'Web Publishing PNG', 'N', 'N', 2, 'Y', 'N', 'PNG', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/png');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='XML') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB XML', 'Web Publishing XML', 'N', 'N', 2, 'Y', 'N', 'XML', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/xml');
		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='RTF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, VALID_ON_PROFILE, DEFAULT_EXTENSION, ON_DESKTOP, VIEWER, PRINTING, DISABLED, MIME_TYPE)
 Values
   (seq.nextval, 'RTF', 'Rich Text Format', 2, 'Y', 'RTF', 'Y', 935, 0, 'N', 'application/rtf');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='P7M') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'DIGITAL SIGNF', 'Digital Sign Reader', 'N', 'N', 2, 'Y', 'N', 'P7M', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/pkcs7-mime');

   		end if;
	end if;
	end;
end;
/



begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='LWP') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'LOTUS WORD PRO', 'Lotus Word Pro', 'N', 'N', 2, 'Y', 'N', 'LWP', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/lotus');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='MSG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME)
 Values
   (seq.nextval, 'MS OUTLOOK', 'Microsoft Outlook', 'N', 'N', 2, 'Y', 'N', 'MSG', 'Y', 'Y', 1, 'N', '1', 'N', 'N');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='DOC') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS WORD', 'Microsoft Word', 'N', 'Y', 2, 'Y', 'N', 'DOC', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/msword');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='XLS') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS EXCEL', 'Microsoft Excel', 'N', 'N', 3, 'Y', 'N', 'XLS', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/vnd.ms-excel');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PDF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'ACROBAT', 'Adobe Acrobat', 'N', 'N', 2, 'Y', 'N', 'PDF', 'Y', 'Y', 1, 'N', 'N', 'N', 'application/pdf');
		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='WPD') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'WORDPERFECT', 'WordPerfect', 'N', 'Y', 2, 'Y', 'N', 'WPD', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/wordpfct');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PPT') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS POWERPOINT', 'Microsoft PowerPoint', 'N', 'Y', 2, 'Y', 'N', 'PPT', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/vnd.ms-powerpoint');
		end if;
	end if;
	end;
end;
/



begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='GIF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB GIF', 'Web Publishing GIF', 'N', 'N', 2, 'Y', 'N', 'GIF', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/gif');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='JPG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB JPG', 'Web Publishing JPG', 'N', 'N', 2, 'Y', 'N', 'JPG', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/jpg');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PNG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB PNG', 'Web Publishing PNG', 'N', 'N', 2, 'Y', 'N', 'PNG', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/png');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='XML') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB XML', 'Web Publishing XML', 'N', 'N', 2, 'Y', 'N', 'XML', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/xml');
		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='RTF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, VALID_ON_PROFILE, DEFAULT_EXTENSION, ON_DESKTOP, VIEWER, PRINTING, DISABLED, MIME_TYPE)
 Values
   (seq.nextval, 'RTF', 'Rich Text Format', 2, 'Y', 'RTF', 'Y', 935, 0, 'N', 'application/rtf');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='P7M') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'DIGITAL SIGNF', 'Digital Sign Reader', 'N', 'N', 2, 'Y', 'N', 'P7M', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/pkcs7-mime');

   		end if;
	end if;
	end;
end;
/
BEGIN
DECLARE cnt INT;
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_VOCI_MENU_ADMIN WHERE (VAR_CODICE='Tipi ruolo');
		IF (cnt = 0) THEN
				INSERT INTO DPA_VOCI_MENU_ADMIN (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE,VAR_VISIBILITA_MENU)
				VALUES (1,'Tipi ruolo','Tipi ruolo', null); 
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;	
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_VOCI_MENU_ADMIN WHERE (VAR_CODICE='Utenti');
		IF (cnt = 0) THEN
				INSERT INTO DPA_VOCI_MENU_ADMIN (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE,VAR_VISIBILITA_MENU)
				VALUES (2,'Utenti','Utenti', null); 
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;	
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_VOCI_MENU_ADMIN WHERE (VAR_CODICE='Registri');
		IF (cnt = 0) THEN
				INSERT INTO DPA_VOCI_MENU_ADMIN (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE,VAR_VISIBILITA_MENU)
				VALUES (3,'Registri','Registri', null); 
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;	
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_VOCI_MENU_ADMIN WHERE (VAR_CODICE='Funzioni');
		IF (cnt = 0) THEN
				INSERT INTO DPA_VOCI_MENU_ADMIN (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE,VAR_VISIBILITA_MENU)
				VALUES (4,'Funzioni','Funzioni', null); 
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;	
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_VOCI_MENU_ADMIN WHERE (VAR_CODICE='Rag.Trasm.');
		IF (cnt = 0) THEN
				INSERT INTO DPA_VOCI_MENU_ADMIN (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE,VAR_VISIBILITA_MENU)
				VALUES (5,'Rag.Trasm.','Rag.Trasm.', null); 
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;	
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_VOCI_MENU_ADMIN WHERE (VAR_CODICE='Organigramma');
		IF (cnt = 0) THEN
				INSERT INTO DPA_VOCI_MENU_ADMIN (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE,VAR_VISIBILITA_MENU)
				VALUES (6,'Organigramma','Organigramma', null); 
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;	
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_VOCI_MENU_ADMIN WHERE (VAR_CODICE='Titolario');
		IF (cnt = 0) THEN
				INSERT INTO DPA_VOCI_MENU_ADMIN (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE,VAR_VISIBILITA_MENU)
				VALUES (7,'Titolario','Titolario',null); 
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;	
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_VOCI_MENU_ADMIN WHERE (VAR_CODICE='Gestione Log');
		IF (cnt = 0) THEN
				INSERT INTO DPA_VOCI_MENU_ADMIN (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE,VAR_VISIBILITA_MENU)
				VALUES (8,'Gestione Log','Gestione Log', null); 
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;	
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_VOCI_MENU_ADMIN WHERE (VAR_CODICE='Sblocca documenti');
		IF (cnt = 0) THEN
				INSERT INTO DPA_VOCI_MENU_ADMIN (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE,VAR_VISIBILITA_MENU)
				VALUES (9,'Sblocca documenti','Sblocca documenti',null); 
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;	
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_VOCI_MENU_ADMIN WHERE (VAR_CODICE='Tipi documento');
		IF (cnt = 0) THEN
				INSERT INTO DPA_VOCI_MENU_ADMIN (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE,VAR_VISIBILITA_MENU)
				VALUES (10,'Tipi documento','Tipi documento', 'ProfilazioneDinamica');  
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;	
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_VOCI_MENU_ADMIN WHERE (VAR_CODICE='Diagrammi Stato');
		IF (cnt = 0) THEN
				INSERT INTO DPA_VOCI_MENU_ADMIN (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE,VAR_VISIBILITA_MENU)
				VALUES (11,'Diagrammi Stato','Diagrammi Stato', 'DiagrammiStato'); 
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;	
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_VOCI_MENU_ADMIN WHERE (VAR_CODICE='Liste di distribuzione');
		IF (cnt = 0) THEN
				INSERT INTO DPA_VOCI_MENU_ADMIN (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE,VAR_VISIBILITA_MENU)
				VALUES (12,'Liste di distribuzione','Liste di distribuzione','LISTE_DISTRIBUZIONE'); 
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;	
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_VOCI_MENU_ADMIN WHERE (VAR_CODICE='Modelli Trasmissioni');
	IF (cnt = 0) THEN
				INSERT INTO DPA_VOCI_MENU_ADMIN (SYSTEM_ID, VAR_CODICE, VAR_DESCRIZIONE,VAR_VISIBILITA_MENU)
				VALUES (13,'Modelli Trasmissioni','Modelli Trasmissioni', null); 
	END IF;
  END;
END;
/
BEGIN
DECLARE cnt INT;
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_FORMATI_DOCUMENTO WHERE (FILE_EXTENSION='PDF');
		IF (cnt = 0) THEN
			INSERT INTO DPA_FORMATI_DOCUMENTO (	SYSTEM_ID, ID_AMMINISTRAZIONE, FILE_TYPE_USED, DESCRIPTION, FILE_EXTENSION, MAX_FILE_SIZE, MAX_FILE_SIZE_ALERT_MODE, CONTAINS_FILE_MODEL, DOCUMENT_TYPE)
			VALUES	(seq.nextval, null, 1, 'Adobe Acrobat', 'PDF', 0, 2, 0, 0);
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;		
	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_FORMATI_DOCUMENTO WHERE (FILE_EXTENSION='TXT');
		IF (cnt = 0) THEN
			INSERT INTO DPA_FORMATI_DOCUMENTO (	SYSTEM_ID, ID_AMMINISTRAZIONE, FILE_TYPE_USED, DESCRIPTION, FILE_EXTENSION, MAX_FILE_SIZE, MAX_FILE_SIZE_ALERT_MODE, CONTAINS_FILE_MODEL, DOCUMENT_TYPE)
			VALUES	(seq.nextval, null, 1, 'File di testo', 'TXT', 0, 2, 0, 0);
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;		
	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_FORMATI_DOCUMENTO WHERE (FILE_EXTENSION='P7M');
		IF (cnt = 0) THEN
			INSERT INTO DPA_FORMATI_DOCUMENTO (	SYSTEM_ID, ID_AMMINISTRAZIONE, FILE_TYPE_USED, DESCRIPTION, FILE_EXTENSION, MAX_FILE_SIZE, MAX_FILE_SIZE_ALERT_MODE, CONTAINS_FILE_MODEL, DOCUMENT_TYPE)
			VALUES	(seq.nextval, null, 1, 'File firmati digitalmente', 'P7M', 0,	2, 	0, 0 );
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;		
	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_FORMATI_DOCUMENTO WHERE (FILE_EXTENSION='BMP');
		IF (cnt = 0) THEN
			INSERT INTO DPA_FORMATI_DOCUMENTO (	SYSTEM_ID, ID_AMMINISTRAZIONE, FILE_TYPE_USED, DESCRIPTION, FILE_EXTENSION, MAX_FILE_SIZE, MAX_FILE_SIZE_ALERT_MODE, CONTAINS_FILE_MODEL, DOCUMENT_TYPE)
			VALUES	( seq.nextval, null, 1, 'Immagine Bitmap', 'BMP', 0, 2, 0, 0 );
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;		
	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_FORMATI_DOCUMENTO WHERE (FILE_EXTENSION='JPG');
		IF (cnt = 0) THEN
			INSERT INTO DPA_FORMATI_DOCUMENTO (	SYSTEM_ID, ID_AMMINISTRAZIONE, FILE_TYPE_USED, DESCRIPTION, FILE_EXTENSION, MAX_FILE_SIZE, MAX_FILE_SIZE_ALERT_MODE, CONTAINS_FILE_MODEL, DOCUMENT_TYPE)
			VALUES	( seq.nextval, null, 1, 'Immagine JPG','JPG', 0, 2, 0, 0 );
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;		
	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_FORMATI_DOCUMENTO WHERE (FILE_EXTENSION='TIF');
		IF (cnt = 0) THEN
			INSERT INTO DPA_FORMATI_DOCUMENTO (	SYSTEM_ID, ID_AMMINISTRAZIONE, FILE_TYPE_USED, DESCRIPTION, FILE_EXTENSION, MAX_FILE_SIZE, MAX_FILE_SIZE_ALERT_MODE, CONTAINS_FILE_MODEL, DOCUMENT_TYPE)
			VALUES	( seq.nextval, null, 1, 'Immagine TIF', 'TIF', 0, 2, 0, 0 );
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;		
	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_FORMATI_DOCUMENTO WHERE (FILE_EXTENSION='TIFF');
		IF (cnt = 0) THEN
			INSERT INTO DPA_FORMATI_DOCUMENTO (	SYSTEM_ID, ID_AMMINISTRAZIONE, FILE_TYPE_USED, DESCRIPTION, FILE_EXTENSION, MAX_FILE_SIZE, MAX_FILE_SIZE_ALERT_MODE, CONTAINS_FILE_MODEL, DOCUMENT_TYPE)
			VALUES	( seq.nextval, null, 1, 'Immagine TIFF', 'TIFF', 0, 2, 0, 0 );
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;			
	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_FORMATI_DOCUMENTO WHERE (FILE_EXTENSION='PPT');
		IF (cnt = 0) THEN
			INSERT INTO DPA_FORMATI_DOCUMENTO (	SYSTEM_ID, ID_AMMINISTRAZIONE, FILE_TYPE_USED, DESCRIPTION, FILE_EXTENSION, MAX_FILE_SIZE, MAX_FILE_SIZE_ALERT_MODE, CONTAINS_FILE_MODEL, DOCUMENT_TYPE)
			VALUES	(  seq.nextval, null, 1, 'Microsoft PowerPoint', 'PPT', 0, 2, 0, 0 );
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;		
	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_FORMATI_DOCUMENTO WHERE (FILE_EXTENSION='DOC');
		IF (cnt = 0) THEN
			INSERT INTO DPA_FORMATI_DOCUMENTO (	SYSTEM_ID, ID_AMMINISTRAZIONE, FILE_TYPE_USED, DESCRIPTION, FILE_EXTENSION, MAX_FILE_SIZE, MAX_FILE_SIZE_ALERT_MODE, CONTAINS_FILE_MODEL, DOCUMENT_TYPE)
			VALUES	(  seq.nextval, null, 1, 'Microsoft Word','DOC', 0, 2, 0, 0 );
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;		
	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_FORMATI_DOCUMENTO WHERE (FILE_EXTENSION='XLS');
		IF (cnt = 0) THEN
			INSERT INTO DPA_FORMATI_DOCUMENTO (	SYSTEM_ID, ID_AMMINISTRAZIONE, FILE_TYPE_USED, DESCRIPTION, FILE_EXTENSION, MAX_FILE_SIZE, MAX_FILE_SIZE_ALERT_MODE, CONTAINS_FILE_MODEL, DOCUMENT_TYPE)
			VALUES	(  seq.nextval, null, 1, 'Microsoft Excel', 'XLS', 0, 2, 0, 0 );
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;		
	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_FORMATI_DOCUMENTO WHERE (FILE_EXTENSION='RTF');
		IF (cnt = 0) THEN
			INSERT INTO DPA_FORMATI_DOCUMENTO (	SYSTEM_ID, ID_AMMINISTRAZIONE, FILE_TYPE_USED, DESCRIPTION, FILE_EXTENSION, MAX_FILE_SIZE, MAX_FILE_SIZE_ALERT_MODE, CONTAINS_FILE_MODEL, DOCUMENT_TYPE)
			VALUES	( seq.nextval, null, 1, 'Rich Text Format', 'RTF', 0, 2, 0, 0 );
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;		
	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_FORMATI_DOCUMENTO WHERE (FILE_EXTENSION='HTM');
		IF (cnt = 0) THEN
			INSERT INTO DPA_FORMATI_DOCUMENTO (	SYSTEM_ID, ID_AMMINISTRAZIONE, FILE_TYPE_USED, DESCRIPTION, FILE_EXTENSION, MAX_FILE_SIZE, MAX_FILE_SIZE_ALERT_MODE, CONTAINS_FILE_MODEL, DOCUMENT_TYPE)
			VALUES	( seq.nextval, null, 1, 'Web Publishing Browser (htm)', 'HTM',	0, 2, 0, 0 );
		END IF;
	END;
END;
/
BEGIN
DECLARE cnt INT;		
	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_FORMATI_DOCUMENTO WHERE (FILE_EXTENSION='HTML');
		IF (cnt = 0) THEN
			INSERT INTO DPA_FORMATI_DOCUMENTO (	SYSTEM_ID, ID_AMMINISTRAZIONE, FILE_TYPE_USED, DESCRIPTION, FILE_EXTENSION, MAX_FILE_SIZE, MAX_FILE_SIZE_ALERT_MODE, CONTAINS_FILE_MODEL, DOCUMENT_TYPE)
			VALUES	( seq.nextval, null, 1, 'Web Publishing Browser (html)', 'HTML', 0, 2, 0, 0 );
		END IF;
	END;
	
END;
/	
BEGIN
DECLARE cnt INT;
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROTO_IN_SEMPLICE';
		IF (cnt != 0) THEN
			DELETE FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_PROTO_IN_SEMPLICE';
		END IF;
	END;
END;
/

BEGIN
DECLARE cnt INT;
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='PROTO_OUT_SEMPL';
		IF (cnt = 0) THEN
			INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  			VALUES ('PROTO_OUT_SEMPL', 'Abilita il sottomenu'' relativo al protocollo in uscita semplificato del menu'' Documenti', NULL); 
		END IF;
	END;
END;
/

BEGIN
DECLARE cnt INT;
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='PROTO_IN_SEMPL';
		IF (cnt = 0) THEN
			INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  			VALUES ('PROTO_IN_SEMPL', 'Abilita il sottomenu'' relativo al protocollo in ingresso semplificato del menu'' Documenti', NULL); 
		END IF;
	END;
END;
/

BEGIN
DECLARE cnt INT;
  	BEGIN
	SELECT COUNT(*) INTO cnt FROM DPA_ANAGRAFICA_FUNZIONI WHERE COD_FUNZIONE='DO_RICERCHE_LIMITATE';
		IF (cnt = 0) THEN
			INSERT INTO DPA_ANAGRAFICA_FUNZIONI (COD_FUNZIONE, VAR_DESC_FUNZIONE, CHA_TIPO_FUNZ)
  			VALUES ('DO_RICERCHE_LIMITATE', 'Abilita il tab relativo alle ricerche limitate dal menu'' Ricerche', NULL); 
		END IF;
	END;
END;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='LWP') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'LOTUS WORD PRO', 'Lotus Word Pro', 'N', 'N', 2, 'Y', 'N', 'LWP', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/lotus');
		end if;
	end if;
	end;
end;
/

begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='TIF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'GEN_TIF', 'GEN_TIF', 'N', 'N', 2, 'Y', 'N', 'TIF', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/tif');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='MSG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME)
 Values
   (seq.nextval, 'MS OUTLOOK', 'Microsoft Outlook', 'N', 'N', 2, 'Y', 'N', 'MSG', 'Y', 'Y', 1, 'N', '1', 'N', 'N');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='DOC') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS WORD', 'Microsoft Word', 'N', 'Y', 2, 'Y', 'N', 'DOC', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/msword');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='XLS') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS EXCEL', 'Microsoft Excel', 'N', 'N', 3, 'Y', 'N', 'XLS', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/vnd.ms-excel');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PDF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'ACROBAT', 'Adobe Acrobat', 'N', 'N', 2, 'Y', 'N', 'PDF', 'Y', 'Y', 1, 'N', 'N', 'N', 'application/pdf');
		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='WPD') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'WORDPERFECT', 'WordPerfect', 'N', 'Y', 2, 'Y', 'N', 'WPD', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/wordpfct');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PPT') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'MS POWERPOINT', 'Microsoft PowerPoint', 'N', 'Y', 2, 'Y', 'N', 'PPT', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/vnd.ms-powerpoint');
		end if;
	end if;
	end;
end;
/



begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='GIF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB GIF', 'Web Publishing GIF', 'N', 'N', 2, 'Y', 'N', 'GIF', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/gif');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='JPG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB JPG', 'Web Publishing JPG', 'N', 'N', 2, 'Y', 'N', 'JPG', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/jpg');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='PNG') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB PNG', 'Web Publishing PNG', 'N', 'N', 2, 'Y', 'N', 'PNG', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/png');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='XML') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'PUB XML', 'Web Publishing XML', 'N', 'N', 2, 'Y', 'N', 'XML', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'image/xml');
		end if;
	end if;
	end;
end;
/


begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='RTF') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, FILING_SCHEME, VALID_ON_PROFILE, DEFAULT_EXTENSION, ON_DESKTOP, VIEWER, PRINTING, DISABLED, MIME_TYPE)
 Values
   (seq.nextval, 'RTF', 'Rich Text Format', 2, 'Y', 'RTF', 'Y', 935, 0, 'N', 'application/rtf');
		end if;
	end if;
	end;
end;
/
begin
	declare cnt int;
  begin
	select count(*) into cnt from user_tables where table_name='APPS';
	if (cnt != 0) then		
		select count(*) into cnt from APPS where (DEFAULT_EXTENSION='P7M') ;
  		if (cnt = 0) then
Insert into apps
   (SYSTEM_ID, APPLICATION, DESCRIPTION, COUNT_KEYS, VER_TOLERANT, FILING_SCHEME, VALID_ON_PROFILE, READ_ONLY, DEFAULT_EXTENSION, OPEN_LAUNCH, ON_DESKTOP, LANGUAGE, DISABLED, INTEGRATED, SUPER_APP, USE_UNCNAME, MIME_TYPE)
 Values
   (seq.nextval, 'DIGITAL SIGNF', 'Digital Sign Reader', 'N', 'N', 2, 'Y', 'N', 'P7M', 'Y', 'Y', 1, 'N', '1', 'N', 'N', 'application/pkcs7-mime');

   		end if;
	end if;
	end;
end;
/

Insert into TEAM.DPA_TIPO_SUPPORTO
   (SYSTEM_ID,VAR_TIPO, CAPACITA, PERIODO_VERIFICA, VAR_DESCRIZIONE)
 Values
   (seq.nextval,'CD-R', 650, 2, NULL);
   /
Insert into TEAM.DPA_TIPO_SUPPORTO
   (VAR_TIPO, CAPACITA, PERIODO_VERIFICA, VAR_DESCRIZIONE)
 Values
   (seq.nextval,'CD-RW', 650, 1, NULL);
   /
Insert into TEAM.DPA_TIPO_SUPPORTO
   (VAR_TIPO, CAPACITA, PERIODO_VERIFICA, VAR_DESCRIZIONE)
 Values
   (seq.nextval,'DVD-ROM', 4812.8, 2, NULL);
   /
Insert into TEAM.DPA_TIPO_SUPPORTO
   (VAR_TIPO, CAPACITA, PERIODO_VERIFICA, VAR_DESCRIZIONE)
 Values
   (seq.nextval,'DVD-R', 4812.8, 2, NULL);
   /
Insert into TEAM.DPA_TIPO_SUPPORTO
   (VAR_TIPO, CAPACITA, PERIODO_VERIFICA, VAR_DESCRIZIONE)
 Values
   (seq.nextval,'DVD-RW', 4812.8, 2, NULL);
   /
Insert into TEAM.DPA_TIPO_SUPPORTO
   (VAR_TIPO, CAPACITA, PERIODO_VERIFICA, VAR_DESCRIZIONE)
 Values
   (seq.nextval,'CD-ROM', 650, 2, NULL);
   /
Insert into TEAM.DPA_TIPO_SUPPORTO
   (VAR_TIPO, CAPACITA, PERIODO_VERIFICA, VAR_DESCRIZIONE)
 Values
   (seq.nextval,'DVD-RAM', 4812.8, 2, NULL);
/

